/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package IHM;

import Jeu.Carreau;
import Jeu.Joueur;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.lwjgl.input.Mouse;

/**
 *
 * @author Louis
 */
public class FrameJeu extends javax.swing.JFrame {

    private int width = 800;
    private int height = 800;
    private boolean menuAff = false;
    private HashMap<String, Carreau> plateau;
    
    public FrameJeu(Ihm3d ihm3d) {
        super("Xtrem Monopoly");
        initComponents();
        this.panelPlateau1.setIhm3d(ihm3d);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menu = new javax.swing.JPanel();
        boutonRetour = new javax.swing.JButton();
        panelCarreau = new javax.swing.JPanel();
        labelNomCarreau = new javax.swing.JLabel();
        panelJoueur = new javax.swing.JPanel();
        panelPlateau1 = new IHM.PanelPlateau();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1280, 300));
        getContentPane().setLayout(null);

        menu.setMinimumSize(new java.awt.Dimension(300, 720));
        menu.setLayout(null);

        boutonRetour.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Data/menu_button_icon_return.png"))); // NOI18N
        boutonRetour.setToolTipText("");
        boutonRetour.setBorder(null);
        boutonRetour.setBorderPainted(false);
        boutonRetour.setContentAreaFilled(false);
        boutonRetour.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        boutonRetour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonRetourActionPerformed(evt);
            }
        });
        menu.add(boutonRetour);
        boutonRetour.setBounds(250, 0, 51, 51);

        labelNomCarreau.setText("Nom");
        labelNomCarreau.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout panelCarreauLayout = new javax.swing.GroupLayout(panelCarreau);
        panelCarreau.setLayout(panelCarreauLayout);
        panelCarreauLayout.setHorizontalGroup(
            panelCarreauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCarreauLayout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(labelNomCarreau, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        panelCarreauLayout.setVerticalGroup(
            panelCarreauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCarreauLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(labelNomCarreau, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(586, Short.MAX_VALUE))
        );

        menu.add(panelCarreau);
        panelCarreau.setBounds(0, 50, 300, 670);

        panelJoueur.setEnabled(false);

        javax.swing.GroupLayout panelJoueurLayout = new javax.swing.GroupLayout(panelJoueur);
        panelJoueur.setLayout(panelJoueurLayout);
        panelJoueurLayout.setHorizontalGroup(
            panelJoueurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        panelJoueurLayout.setVerticalGroup(
            panelJoueurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 670, Short.MAX_VALUE)
        );

        menu.add(panelJoueur);
        panelJoueur.setBounds(0, 50, 300, 670);

        getContentPane().add(menu);
        menu.setBounds(-300, 0, 300, 720);

        panelPlateau1.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout panelPlateau1Layout = new javax.swing.GroupLayout(panelPlateau1);
        panelPlateau1.setLayout(panelPlateau1Layout);
        panelPlateau1Layout.setHorizontalGroup(
            panelPlateau1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
        );
        panelPlateau1Layout.setVerticalGroup(
            panelPlateau1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
        );

        getContentPane().add(panelPlateau1);
        panelPlateau1.setBounds(0, 0, 0, 0);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boutonRetourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonRetourActionPerformed
        if(this.menuAff){
            new Thread(){
                public void run(){

                    cacherMenu();
                    menuAff = false;

               }
            }.start();
        }
    }//GEN-LAST:event_boutonRetourActionPerformed

    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        // Create and display the form
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameJeu().setVisible(true);
            }
        });
    }*/

    public void mouseLoop(){
        while(true){
            int x = Mouse.getX();
            /*System.out.println(x+"  "+Mouse.getY());
            System.out.println(this.menuAff);*/
            if(x<20&&x>0&&!this.menuAff){
                this.menuAff = true;
                new Thread(){
                    public void run(){
                        afficherMenu();
                    }
                }.start();

            }
            try {
                Thread.sleep(100);
            } catch (InterruptedException ex) {
                Logger.getLogger(FrameJeu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    public void menuLoop(){
        while(true){
            if(this.panelPlateau1!=null&&this.panelPlateau1.getOp()!=null&&this.panelPlateau1.getOp().isLoadingCompleted()&&Mouse.isButtonDown(0)){
                int nc = this.panelPlateau1.getOp().getCarreauSelected();
                if(this.plateau!=null&&nc>=0){
                    if(!this.menuAff){
                        this.menuAff = true;
                        new Thread(){
                            public void run(){
                                afficherMenu();
                            }
                        }.start();
                    }
                    this.afficherCarreau(this.plateau.get(Integer.toString(nc)));
                }
                // la suite est juste du test, elle sera remove
                else if(this.plateau!=null&&(nc==IhmOpenGL.CARTES_CHANCE||nc==IhmOpenGL.CARTES_COMMUNAUTE)){
                    if(!this.menuAff){
                        this.menuAff = true;
                        new Thread(){
                            public void run(){
                                afficherMenu();
                            }
                        }.start();
                    }
                    String s = (nc==IhmOpenGL.CARTES_CHANCE) ? "Tas de cartes chance" : "Tas de cartes caisse dde communauté";
                    this.afficherStr(s);
                }
                
                // fin des tests
            }
            try {
                Thread.sleep(10);
            } catch (InterruptedException ex) {
                Logger.getLogger(FrameJeu.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }
    
    
    public void afficher() {
        setSize(1280, 720);
        setLocationRelativeTo(null); 
        setVisible(true);
        this.panelPlateau1.initialiserPlateau();
        new Thread(){
            public void run(){
                mouseLoop();
            }
        }.start();
        
        new Thread(){
            public void run(){
                menuLoop();
            }
        }.start();
    }

    public void afficherStr(String s){ // à supprimer, pour tests
        this.labelNomCarreau.setText(s);
        this.labelNomCarreau.repaint();
    }
    
    public void afficherPlateau(HashMap<String, Carreau> c){
        this.plateau = c;
        this.panelPlateau1.rafraîchirPlateau(c);
    }
    
    public void afficherMenu(){
        System.out.println("affmenu");
        menu.setLocation(-300, menu.getY());
        menu.revalidate();
        for(int i=0;i<100;i++){
            menu.setLocation(menu.getX()+3, menu.getY());
            menu.revalidate();
            try {
                Thread.sleep(3);
            } catch (InterruptedException ex) {
                Logger.getLogger(FrameJeu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    public void cacherMenu(){
        menu.setLocation(0, menu.getY());
        menu.revalidate();
        for(int i=0;i<100;i++){
            menu.setLocation(menu.getX()-3, menu.getY());
            menu.revalidate();
            try {
                Thread.sleep(3);
            } catch (InterruptedException ex) {
                Logger.getLogger(FrameJeu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boutonRetour;
    private javax.swing.JLabel labelNomCarreau;
    private javax.swing.JPanel menu;
    private javax.swing.JPanel panelCarreau;
    private javax.swing.JPanel panelJoueur;
    private IHM.PanelPlateau panelPlateau1;
    // End of variables declaration//GEN-END:variables

    private void afficherCarreau(Carreau c) {
        this.labelNomCarreau.setText(c.getNomCarreau());
        this.labelNomCarreau.repaint();
    }

    void AfficherJoueur(Joueur j) {
        int a = 0;
    }
}
